pr: none
trigger: none

pool: sonic-ubuntu-1c
variables:
  - group: sonicbld
steps:
  - checkout: self
    clean: true
  - bash: |
      set -ex
      sudo apt update
      sudo apt install -y gh jq
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      git config --global user.email "sonicbld@microsoft.com"
      git config --global user.name "Sonic Automation"
      git config --global pull.rebase false
      echo $TOKEN | gh auth login --with-token
      echo $AZURE_DEVOPS_EXT_PAT | az devops login

      repos=$(for i in $(cat azure-pipelines/codesync.json | jq .[] -r); do echo $i | sed 's#src/##'; done | sort -u)
      [ -z $repos ] && exit 1
      for repo in $repos; do
        sudo rm -rf $repo
        git clone https://github.com/sonic-net/$repo
        cd $repo
        git remote add base https://github.com/Azure/$repo.msft
        git remote update
        cd ..
        sleep 2
      done
    env:
      TOKEN: $(GITHUB-TOKEN)
      AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
    displayName: Setup env
  - bash: |
      set -ex
      repos=$(for i in $(cat azure-pipelines/codesync.json | jq .[] -r); do echo $i | sed 's#src/##'; done | sort -u)
      cur_dir=$(pwd)
      sudo rm -rf $cur_dir/log
      for repo in $repos; do
        [ -d $cur_dir/$repo ] || continue
        cd $cur_dir/$repo
        echo "# $repo" | tee -a $cur_dir/log
        branches=$(cat ../azure-pipelines/codesync.json | jq -r keys[])
        for branch in $branches; do
          if cat ../azure-pipelines/codesync.json | jq -r ".\"$branch\"" | grep -v $repo; then
            continue
          fi
          branch_base=$branch
          branch_head=$branch
          if [[ $branch == "202412" ]]; then
            branch_head=202411
          fi
          echo "- $branch" | tee -a $cur_dir/log
          git ls-remote --exit-code origin refs/heads/$branch_head || { echo "  - no branch: origin" | tee -a $cur_dir/log; continue; }
          git ls-remote --exit-code base refs/heads/$branch_base || { echo "  - no branch: base" | tee -a $cur_dir/log; continue; }
          head_commit=$(git log -n 1 --format=%H origin/$branch_head)
          git log --format=%H base/$branch_base | grep $head_commit && continue
          git merge --abort || true
          git branch -D test || true
          git checkout -b test
          git branch -D $branch_base || true
          git checkout -b $branch_base --track base/$branch_base
          git reset HEAD --hard
          git clean -xdff
          git status | grep "^nothing to commit, working tree clean" || { echo "  - git not clean" | tee -a $cur_dir/log; continue; }
          prehead=$(git log -n 1 --pretty=format:'%H')
          git pull origin $branch_head --no-edit || true
          git status
          if git status | grep "You have unmerged paths";then
            echo "  - conflict!" | tee -a $cur_dir/log
            git merge --abort
            continue
          fi
          head=$(git log -n 1 --pretty=format:'%H')
          if [[ $prehead == $head ]];then
            echo "  - No change after merging" | tee -a $cur_dir/log
            continue
          fi
          echo "  - Diff logs" | tee -a $cur_dir/log
          git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]' | sed 's/^/        /'
          body=$(git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]')
          body='```<br>'$body'<br>```'
          # push code
          git push https://mssonicbld:$TOKEN@github.com/mssonicbld/$repo.msft HEAD:sonicbld/$branch-merge -f
          # craete PR
          url_=$(gh pr create -R Azure/$repo.msft -H mssonicbld:sonicbld/$branch-merge -B $branch_base -t "[code sync] Merge code from sonic-net/$repo:$branch_head to $branch" -b "$body" -l automerge 2>&1; rc=$?)
          url=$(echo "$url_" | grep -Eo https://github.com/Azure/$repo.msft/pull/[0-9]* )
          if echo $url_ | grep "already exists:"; then
            gh pr edit $url -b "$body" --add-label automerge
          fi
          echo "  - $url" >> $cur_dir/log
          sleep 10
        done
      done
    env:
      TOKEN: $(GITHUB-TOKEN)
      AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
      RETRY_COUNT: $(RETRY_COUNT)
    displayName: 'code sync'
  - bash: |
      set -ex
      cat log
      body="
      https://dev.azure.com/mssonic/build/_build?definitionId=862\n
      $(cat log)
      "
      if grep -q '  - conflict!' log; then
        curl $URL -H 'Content-Type: application/json' -d "{\"text\": \"$body\"}"
      fi
    env:
      URL: $(TEAMS-MSG-URL)
