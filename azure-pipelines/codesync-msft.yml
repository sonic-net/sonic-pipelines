pr: none
trigger: none

pool: sonic-ubuntu-1c
variables:
  - group: sonicbld
steps:
  - checkout: self
    clean: true
  - bash: |
      set -ex
      sudo apt update
      sudo apt install -y gh jq
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      git config --global user.email "sonicbld@microsoft.com"
      git config --global user.name "Sonic Automation"
      git config --global pull.rebase false
      echo $TOKEN | gh auth login --with-token
      echo $AZURE_DEVOPS_EXT_PAT | az devops login

      sudo rm -rf sonic-buildimage-msft
      git clone https://github.com/Azure/sonic-buildimage-msft
      pushd sonic-buildimage-msft
      git remote add head https://github.com/sonic-net/sonic-buildimage
      git fetch head
    env:
      TOKEN: $(GITHUB-TOKEN)
      AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
    displayName: Setup env
  - bash: |
      set -ex
      branches=$(cat azure-pipelines/codesync.json | jq -r keys[])
      pushd sonic-buildimage-msft
      [ -z "$branches" ] && exit 1
      for branch in $branches; do
        branch_base=$branch
        branch_head=$branch
        remote=head
        if [[ $branch_head == "202412" ]]; then
          branch_head=202411
        fi
        if [[ $branch_head == "202503" ]]; then
          branch_head=202412
          remote=origin
        fi
        git ls-remote origin refs/heads/$branch_base || continue
        git ls-remote $remote refs/heads/$branch_head || continue
        head_commit=$(git log -n 1 --format=%H $remote/$branch_head)
        git log --format=%H origin/$branch_base | grep $head_commit && continue
        subs=$(cat ../azure-pipelines/codesync.json | jq -r ".\"$branch\"")
        [ -z "$subs" ] && continue
        git branch -D $branch_base || true
        git clean -xdff && git reset HEAD --hard
        git checkout -b $branch_base --track origin/$branch_base
        rm -rf $subs
        git reset HEAD --hard
        git status

        git status | grep "^nothing to commit, working tree clean" || continue
        for i in {1..10}; do
          git submodule sync
          git submodule update --init $subs && break
          sleep 2
          [[ $i == 10 ]] && continue 2
        done
        prehead=$(git log -n 1 --pretty=format:'%H')
        git pull $remote $branch_head --no-commit || true
        git status
        git submodule

        if ! git status | grep "^nothing to commit, working tree clean";then
          # code conflict
          git add $subs
          git reset platform/checkout/cisco-8000.ini
          git checkout platform/checkout/cisco-8000.ini
          if git status | grep "You have unmerged paths";then
            continue #TODO add alert
            CommitID=$(git log $prehead..HEAD --merge --pretty=format:'%H'  | tail -n 1)
            description="<h1>Please merge $CommitID into sonic-buildimage-msft.Do not Cherry-pick!!!</h1>"
            description="code conflict: sonic-net/sonic-buildimage:$branch_head -> Azure/sonic-buildimage-msft:$branch_base<br>"
            description+=$(git log $prehead..HEAD --merge --pretty=format:'%h -%d %s (%cs) [%aN]')
            assign="Gen-Hwa Chiang <gechiang@microsoft.com>"
            # update work-item
            az boards work-item update --org https://dev.azure.com/mssonic/ --id $ADO_ID --discussion "$description" -f "Custom Field 1=type_A"
          fi
        fi
        GIT_EDITOR=true git merge --continue || true

        head=$(git log -n 1 --pretty=format:'%H')
        if [[ $prehead == $head ]];then
          echo "======No change after merging...======"
          continue
        fi
        echo "======Diff logs======"
        git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]'
        body=$(git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]')
        body='```<br>'$body'<br>```'
        # push code
        git push https://mssonicbld:$TOKEN@github.com/mssonicbld/sonic-buildimage-msft HEAD:sonicbld/$branch_base-merge -f
        # create PR
        url_=$(gh pr create -R Azure/sonic-buildimage-msft -H mssonicbld:sonicbld/$branch_base-merge -B $branch_base -t "[code sync] Merge code from sonic-net/sonic-buildimage:$branch_head to $branch_base" -b "$body" -l automerge 2>&1; rc=$?)
        url=$(echo "$url_" | grep -Eo https://github.com/Azure/sonic-buildimage-msft/pull/[0-9]* )

        if echo $url_ | grep "already exists:"; then
          gh pr edit $url -b "$body" --add-label automerge
        fi
      done
    env:
      TOKEN: $(GITHUB-TOKEN)
      AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
    displayName: 'code merge'
