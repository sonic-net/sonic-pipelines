pr: none
trigger: none

pool: sonic-ubuntu-1c
variables:
  - group: sonicbld
steps:
  - checkout: self
    clean: true
  - bash: |
      set -ex
      sudo apt update
      sudo apt install -y gh jq
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      git config --global user.email "sonicbld@microsoft.com"
      git config --global user.name "Sonic Automation"
      git config --global pull.rebase false
      echo $TOKEN | gh auth login --with-token

      sudo rm -rf sonic-buildimage-msft
      git clone https://github.com/Azure/sonic-buildimage-msft
      pushd sonic-buildimage-msft
      git remote add mssonicbld https://mssonicbld:$TOKEN@github.com/mssonicbld/sonic-buildimage-msft
      git fetch mssonicbld
    env:
      TOKEN: $(GITHUB-TOKEN)
    displayName: Setup env
  - bash: |
      set -ex
      branches=$(cat azure-pipelines/codesync.json | jq -r keys[])
      cd sonic-buildimage-msft
      work_space=$(pwd)
      for branch in $branches; do
        cd $work_space
        paths=$(cat ../azure-pipelines/codesync.json | jq -r ".\"$branch\"")
        git submodule deinit -f --all
        rm .git/modules/* -rf
        git reset HEAD --hard
        git checkout -b $branch --track origin/$branch
        git submodule sync
        git submodule update --init $paths
        for path in $paths; do
          module_name=$(echo $path | sed 's#src/##')
          # if some modules break PR build. Add them to ignore_pathes
          for ignore_path in $(ignore_pathes); do
            [[ "$ignore_path" == "$path" ]] && continue 2
          done
          cd $work_space/$path
          # 1. only keep repos with msft
          git remote -vv
          git remote -vv | grep -i '\.msft' || continue
          # 2. only update the same branch with sonic-buildimage-msft
          git branch -a --contains HEAD | grep "remotes/origin/$branch" || continue

          head=$(git rev-parse HEAD)
          git checkout $branch
          git pull
          commits=$(git log ${head}..HEAD --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset')
          if [[ "$commits" != "" ]];then
            body="#### Why I did it"$'\n'
            body+="$path"$'\n'
            body+='```'$'\n'
            body+=$commits$'\n'
            body+='```'$'\n'
            body+="#### How I did it"$'\n'
            body+="#### How to verify it"$'\n'
            body+="#### Description for the changelog"$'\n'
            cd $work_space

            git add $path
            git commit -m "[submodule] Update submodule $module_name to the latest HEAD automatically" || continue
            git push mssonicbld HEAD:submodule-$branch-$module_name -f
            git status
            result=$(gh pr create -R Azure/sonic-buildimage-msft -H mssonicbld:submodule-$branch-$module_name -B $branch -t "[submodule][$branch] Update submodule $module_name to the latest HEAD automatically" -l "automerge" -b "$body" 2>&1 || true)
            pr_url=$(echo "$result" | grep -Eo "https://github.com/Azure/sonic-buildimage-msft/pull/[0-9]*")
            sleep 1
            gh pr comment $pr_url --body "/azp run"
            git reset HEAD~ --hard
            sleep 10
          fi
        done
      done
    displayName: Update submodules
